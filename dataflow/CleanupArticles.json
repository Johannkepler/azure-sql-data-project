{
	"name": "CleanupArticles",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CosmosDbSqlApiCollection1",
						"type": "DatasetReference"
					},
					"name": "CosmosTransform"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "CosmosDbSqlApiCollection2",
						"type": "DatasetReference"
					},
					"name": "ArticlesCleaned"
				}
			],
			"transformations": [
				{
					"name": "SortByArticleID"
				},
				{
					"name": "SetSponsoredBoolean",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "RemoveColumns",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "UpsertRowCondition"
				}
			],
			"script": "source(output(\n\t\tarticle_id as string,\n\t\tdescription as string,\n\t\tguid as string,\n\t\titem as string,\n\t\tlink as string,\n\t\tpubDate as string,\n\t\tsource as string,\n\t\tsponsored as string,\n\t\ttitle as string,\n\t\ttype as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'document',\n\tsystemColumns: false) ~> CosmosTransform\nRemoveColumns sort(asc(source, true),\n\tasc(pubDate, true)) ~> SortByArticleID\nCosmosTransform derive(sponsored = upper(sponsored)) ~> SetSponsoredBoolean\nSetSponsoredBoolean select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveColumns\nSortByArticleID alterRow(upsertIf(equals(article_id, article_id))) ~> UpsertRowCondition\nUpsertRowCondition sink(input(\n\t\tarticle_id as string,\n\t\tdescription as string,\n\t\tguid as string,\n\t\tlink as string,\n\t\tpubDate as string,\n\t\tsource as string,\n\t\tsponsored as string,\n\t\ttitle as string,\n\t\ttype as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tformat: 'document',\n\tpartitionKey: ['/article_id'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ArticlesCleaned"
		}
	}
}